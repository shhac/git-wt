#!/usr/bin/expect -f

# Enhanced expect script with human-like delays and screen capture
set timeout 3
set human_delay 0.025 ;# 25ms between keystrokes

proc capture_screen {msg} {
    global expect_out
    puts "\n=== $msg ==="
    puts "=== SCREEN CAPTURE START ==="
    
    if {[info exists expect_out(buffer)]} {
        puts $expect_out(buffer)
    } else {
        puts "(No buffer content available)"
    }
    
    puts "=== SCREEN CAPTURE END ==="
}

proc send_human {text} {
    global human_delay
    # Send each character with a small delay
    foreach char [split $text ""] {
        send -- $char
        sleep $human_delay
    }
}

proc send_key {key} {
    global human_delay
    send -- $key
    sleep $human_delay
}

# Test: Interactive navigation with arrow keys
puts "\n=== Testing interactive navigation with human-like timing ==="
spawn ./zig-out/bin/git-wt go

expect {
    "*Navigate*Select*" {
        capture_screen "Initial arrow-key UI"
        
        # Navigate down with human timing
        puts "\n>>> Sending DOWN arrow..."
        sleep 0.5 ;# Human reaction time
        send_key "\033\[B"
        
        sleep 0.2 ;# Let screen update
        expect "*" ;# Consume any output
        capture_screen "After DOWN arrow"
        
        # Navigate down again
        puts "\n>>> Sending another DOWN arrow..."
        sleep 0.3
        send_key "\033\[B"
        
        sleep 0.2
        expect "*"
        capture_screen "After second DOWN"
        
        # Navigate up
        puts "\n>>> Sending UP arrow..."
        sleep 0.3
        send_key "\033\[A"
        
        sleep 0.2
        expect "*"
        capture_screen "After UP arrow"
        
        # Select with Enter
        puts "\n>>> Pressing ENTER to select..."
        sleep 0.5
        send_key "\r"
        
        expect {
            "cd *" {
                capture_screen "Navigation command output"
            }
            timeout {
                capture_screen "After ENTER"
            }
        }
    }
    "*Enter number*" {
        capture_screen "Number-based mode"
        
        # Type number with human speed
        puts "\n>>> Typing '1' with human timing..."
        sleep 0.5
        send_human "1"
        sleep 0.2
        send_key "\r"
    }
    timeout {
        capture_screen "Initial timeout"
    }
}

# Clean up
catch {close}
catch {wait}

puts "\n=== Test complete ===\n"