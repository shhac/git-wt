name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-release:
    name: Build Release for ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - platform: x86_64-macos
            os: macos-latest
            target: x86_64-macos
          - platform: aarch64-macos
            os: macos-latest
            target: aarch64-macos
          - platform: x86_64-linux
            os: ubuntu-latest
            target: x86_64-linux
          - platform: aarch64-linux
            os: ubuntu-latest
            target: aarch64-linux

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Zig
        uses: goto-bus-stop/setup-zig@v2
        with:
          version: '0.15.1'

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Build for ${{ matrix.platform }}
        run: zig build -Doptimize=ReleaseFast -Dtarget=${{ matrix.target }} -Dversion=${{ steps.version.outputs.VERSION }}

      - name: Create tarball
        run: |
          cd zig-out/bin
          tar -czf ../../git-wt-${{ matrix.platform }}.tar.gz git-wt
          cd ../..

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-wt-${{ matrix.platform }}
          path: git-wt-${{ matrix.platform }}.tar.gz

  create-universal-macos:
    name: Create Universal macOS Binary
    runs-on: macos-latest
    needs: build-release
    steps:
      - name: Download x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: git-wt-x86_64-macos

      - name: Download aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: git-wt-aarch64-macos

      - name: Extract binaries
        run: |
          tar -xzf git-wt-x86_64-macos.tar.gz
          mv git-wt git-wt-x86_64
          tar -xzf git-wt-aarch64-macos.tar.gz
          mv git-wt git-wt-aarch64

      - name: Create universal binary
        run: |
          lipo -create -output git-wt git-wt-x86_64 git-wt-aarch64
          tar -czf git-wt-macos-universal.tar.gz git-wt

      - name: Upload universal artifact
        uses: actions/upload-artifact@v4
        with:
          name: git-wt-macos-universal
          path: git-wt-macos-universal.tar.gz

  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [build-release, create-universal-macos]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Prepare release files
        run: |
          mkdir -p release
          find . -name "*.tar.gz" -exec cp {} release/ \;
          ls -lh release/

      - name: Extract version from tag
        id: version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Extract changelog for this version
        id: changelog
        run: |
          VERSION="${{ steps.version.outputs.VERSION }}"
          # Extract section from CHANGELOG.md for this version
          awk "/## \[${VERSION#v}\]/{flag=1; next} /## \[/{flag=0} flag" CHANGELOG.md > release-notes.md
          if [ ! -s release-notes.md ]; then
            echo "Release $VERSION" > release-notes.md
            echo "" >> release-notes.md
            echo "See [CHANGELOG.md](CHANGELOG.md) for details." >> release-notes.md
          fi

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release/*.tar.gz
          body_path: release-notes.md
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
